import random
import time
import emoji
from termcolor import colored
#Criando tabuleiros
tabuleiro_vazio1 = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
]

tabuleiro_vazio2 = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
]

tabuleiro_computador = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
]

tabuleiro_player = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
]

#criando vari√°vel de embarca√ß√µes do player
embarcacoes_player1 = 0
embarcacoes_computador = 0

#Criando as Def's

# verifica√ß√£o para saber se a LINHA onde o jogador quer inserir uma embarca√ß√£o √© v√°lida
def linha_invalida():
    while True:
        entrada = input(colored("\nIndique a LINHA onde voc√™ deseja inserir uma embarca√ß√£o: ", "cyan"))
        if entrada.isdigit():
            linha = int(entrada)
            if linha in [1, 2, 3, 4, 5]:
                return linha
        print(colored("‚ùå Op√ß√£o inv√°lida", "red", attrs=['bold']))
        
# verifica√ß√£o para saber se a COLUNA onde o jogador quer inserir uma embarca√ß√£o √© v√°lida
def coluna_invalida():
    while True:
        entrada = input(colored("Indique a COLUNA onde voc√™ deseja inserir uma embarca√ß√£o: ", "blue"))
        if entrada.isdigit():
            coluna = int(entrada)
            if 1 <= coluna <= 10:
                return coluna
        print(colored("‚ùå Op√ß√£o inv√°lida", "red", attrs=['bold']))
        
# verificacao da LINHA que o jogador que atirar √© v√°lida  
def jogador_quer_acertar_linha():
    while True:
        entrada = input(colored("üßë Player 1 - Escreva a LINHA de cordenada onde voc√™ quer atirar: ", "grey"))
        if entrada.isdigit():
            linha = int(entrada)
            if linha in [1, 2, 3, 4, 5]:
                return linha
        print(colored("‚ùå Op√ß√£o inv√°lida", "red", attrs=['bold']))


# verifica√ß√£o da COLUNA que o jogador quer acertar √© v√°lida
def jogador_quer_acertar_coluna():
    while True:
        entrada = input(colored("üßë Player 1 - Escreva a  COLUNA de cordenada onde voc√™ quer atirar: ", "grey"))
        if entrada.isdigit():
            coluna = int(entrada)
            if 1 <= coluna <= 10:
                return coluna
        print(colored("‚ùå Op√ß√£o inv√°lida", "red", attrs=['bold']))


#Verifica o n√∫mero em cada posi√ß√£o e PRINTA, N√ÉO DEFINE, um simbolo correspondente       
def exibe_matriz(matriz_desejada):
    print('   ', end='')
    for i in range(1, 11):
        print(f'{i:2}', end=' ')
    print()

    for i, linha in enumerate(matriz_desejada):
        print(f'{i + 1:2} ', end=' ')
        for celula in linha:
            if celula == 0:
                simbolo = emoji.emojize('üü¶')
                simbolo_colorido = colored(simbolo, 'cyan')
            elif celula == 1:
                simbolo = emoji.emojize('üö¢')
                simbolo_colorido = colored(simbolo, 'green')
            elif celula == 'x':
                simbolo = emoji.emojize('üí¶')
                simbolo_colorido = colored(simbolo, 'blue')
            elif celula == 2:
                simbolo = emoji.emojize('üí•')
                simbolo_colorido = colored(simbolo, 'red')
            print(simbolo_colorido, end=' ')
        print()
                
                
#iniciando o jogo
print(colored("\n******************************************", "yellow"))
print(colored("* Bem vindo ao jogo de Batalha Naval!!!! *", "yellow"))
print(colored("******************************************\n", "yellow"))
print(colored("JOGADORES, ORGANIZEM SUAS FROTAS!!!!!     \n", "green" , attrs=["dark", "bold"]))
print()
print(colored("üßë PLAYER 1:", "blue"))

#Fazendo o player adicionar 5 embarcacoes
while embarcacoes_player1 < 5:
    
    #pedindo a linha que ser√° adicionada uma embarca√ß√£o
    linha = linha_invalida()
    
    #pedindo a coluna que ser√° adicionada uma embarca√ß√£o
    coluna = coluna_invalida()
    
    #Enquanto ele adicionar uma embarca√ß√£o em um lugar que j√° possui embarca√ß√£o ele vai pedir para tentar de novo
    while True:
        if tabuleiro_player[linha - 1][coluna - 1] == 1:
            print(colored("VOC√ä J√Å POSSUI UMA EMBARCA√áAO NESSA POSI√á√ÉO. DIGITE NOVAMENTE", "red", attrs=["bold"]))
            linha = linha_invalida()
            coluna = coluna_invalida()
            
        #Se n√£o, ele vai definir o n√∫mero de embarca√ß√µes e o tabuleiro atual
        else:
            embarcacoes_player1 += 1
            tabuleiro_player[linha - 1][coluna - 1] = 1
            print()
            break 
        
    #apenas fazendo uma verifica√ß√£o para exibir o tabuleiro do player e escrever o plural ou o singular dependendo da quantidade de embarca√ß√µes 
    if embarcacoes_player1 == 1:
        print(colored("Voc√™ possui {} embarca√ß√£o e seu tabuleiro atual √©: ".format(embarcacoes_player1), "cyan", attrs=["dark"]))
        exibe_matriz(tabuleiro_player)
        enter = input(colored("Pressione ENTER", "yellow"))
        
    else:
        print(colored("Voc√™ possui {} embarca√ß√µes e seu tabuleiro atual √©: ".format(embarcacoes_player1), "cyan", attrs=["dark"]))
        exibe_matriz(tabuleiro_player)
        enter = input(colored("Pressione ENTER", "yellow"))


print()


#Definindo o tabuleiro do computador
for embarcacao_computador in range(0,5):
    
    #Definindo a linha e coluna onde ser√£o adicionadas as embarca√ß√µes do computador
    linha_computador = random.randint(0,4)
    coluna_computador = random.randint(0,9)
    
    #Enquanto a cordenada j√° possuir uma embarca√ß√£o ele vai sortear de novo
    while tabuleiro_computador[linha_computador][coluna_computador] == 1:
        linha_computador = random.randint(0,4)
        coluna_computador = random.randint(0,9)
        
    #Depois de j√° conferir ele define onde a embarca√ß√£o vai ficar e soma +1 ao n√∫mero de embarca√ß√µes
    tabuleiro_computador[linha_computador][coluna_computador] = 1
    embarcacoes_computador += 1

    #printando a quantidade de embarca√ß√µes do computador
    if embarcacoes_computador == 1:
        print(colored("ü§ñ O COMPUTADOR possui {} embarca√ß√£o.".format(embarcacoes_computador), "magenta"))
    else:
        print(colored("ü§ñ O COMPUTADOR possui {} embarca√ß√µes.".format(embarcacoes_computador), "magenta"))
    time.sleep(1.5)
    
enter = input(colored("Pressione ENTER", "yellow"))
#comecando a guerra
#Player atirando
print(colored("\nA GUERRA COME√áOU!!!!!!!!!!!!!!!!!!!!!", "green", attrs=["dark","bold"]))
print()

while embarcacoes_player1 != 0 and embarcacoes_computador != 0:
    print(colored("\nüßë Player 1 - Esse √© o seu tabuleiro:" , "blue"))
    exibe_matriz(tabuleiro_vazio1)
    print(colored("Voc√™ possui {} embarca√ß√µes.".format(embarcacoes_player1), "magenta"))
    enter = input(colored("Pressione ENTER", "yellow"))
    print(colored("\nTabuleiro do ü§ñ computador: ", "red"))
    exibe_matriz(tabuleiro_vazio2)
    print(colored("O ü§ñ computador possui {} embarca√ß√µes.".format(embarcacoes_computador), "magenta"))
    enter = input(colored("Pressione ENTER", "yellow"))
    
    print(colored("\nüßë PLAYER 1 ATIREEEEE!!!!", "blue"))
    jogador_acertou_linha = jogador_quer_acertar_linha() - 1
    jogador_acertou_coluna = jogador_quer_acertar_coluna() - 1
    
    #Se n√£o derrubou nenhuma embarca√ß√£o do computador ele faz isso
    if tabuleiro_computador [jogador_acertou_linha][jogador_acertou_coluna] == 0:
        print(colored("\nVoc√™ n√£o derrubou nenhuma embarca√ß√£o! üòû", "red"))
        print(colored("O ü§ñ computador possui {} embarca√ß√µes".format(embarcacoes_computador), "magenta"))
        tabuleiro_vazio2[jogador_acertou_linha][jogador_acertou_coluna] = "x"
        enter = input(colored("Pressione ENTER", "yellow"))
        print()
    
    #se derrubou ele faz isso  
    elif tabuleiro_computador[jogador_acertou_linha][jogador_acertou_coluna] == 1:
        embarcacoes_computador -= 1
        print(colored("\nVoc√™ derrubou uma embarca√ß√£o do computador!!! üòé‚Äã", "green"))
        print(colored("O computador possui {} embarca√ß√µes".format(embarcacoes_computador), "magenta"))
        tabuleiro_vazio2[jogador_acertou_linha][jogador_acertou_coluna] = 2
        enter = input(colored("Pressione ENTER", "yellow"))
        print()
        
        
    #Computador atirando
    linha_atira = random.randint(0,4)
    coluna_atira = random.randint(0,9)
    
    while tabuleiro_vazio1[linha_atira][coluna_atira] == "x" or tabuleiro_vazio1[linha_atira][coluna_atira] == 2:
        linha_atira = random.randint(0,4)
        coluna_atira = random.randint(0,9)
        

    print(colored("O ü§ñ COMPUTADOR EST√Å ATIRANDOOOOO!!!!!", "red"))
    print(colored(f"O ü§ñ computador vai atirar na LINHA: {linha_atira + 1}", "grey"))

    print(colored(f"O ü§ñ computador vai atirar na COLUNA: {coluna_atira + 1}", "grey"))
    enter = input(colored("Pressione ENTER", "yellow"))

    #Se o computador n√£o derrubou nenhuma embarca√ß√£o sua o bloco executado √©:
    if tabuleiro_player[linha_atira][coluna_atira] == 0:
        print(colored("\nO ü§ñ computador N√ÉO acertou sua embarca√ß√£o!", "red"))
        print(colored("Voc√™ possui {} embarca√ß√µes!".format(embarcacoes_player1), "blue"))
        tabuleiro_vazio1[linha_atira][coluna_atira] = "x"
        enter = input(colored("Pressione ENTER", "yellow"))
        
    #Se ele derrubou o bloco executado √©:   
    elif tabuleiro_player[linha_atira][coluna_atira] == 1:
        embarcacoes_player1 -= 1
        print(colored("\nO ü§ñ computador derrubou uma embarca√ß√£o sua!", "white", attrs=["dark"]))
        print(colored("Voc√™ possui {} embarca√ß√µes!".format(embarcacoes_player1), "blue"))
        tabuleiro_vazio1[linha_atira][coluna_atira] = 2
        enter = input(colored("Pressione ENTER", "yellow"))
        
    if embarcacoes_computador == 0:
        print(colored("\nO üßë JOGADOR AFUNDOU A FROTA DO ü§ñ COMPUTADOR!!!!!!", "green", attrs=["bold"]))
        print(colored("TEMOS UM NOVO CAPIT√ÉO DOS MARES üåä", "blue", attrs=["bold"]))
        print(colored("O üßë JOGADOR VENCEUUUUU ‚ÄãüèÜ‚Äã‚Äã", "red", attrs=["bold"]))
        print(colored("\nPLACAR FINAL: ", "yellow", attrs=["bold"]))
        print(colored("Embarca√ß√µes do üßë Player: {}.Embarca√ß√µes do ü§ñ Computador {}.".format(embarcacoes_player1, embarcacoes_computador), "cyan", attrs=["bold"]))
        
    elif embarcacoes_player1 == 0:
        print(colored("\nO ü§ñ COMPUTADOR AFUNDOU A FROTA DO üßë JOGADOR!!!!!!", "green", attrs=["bold"]))
        print(colored("TEMOS UM NOVO CAPIT√ÉO DOS MARES üåä", "blue", attrs=["dark", "bold"]))
        print(colored("O ü§ñ COMPUTADOR VENCEUUUUU üèÜ", "blue", attrs=["bold"]))
        print(colored("\nPLACAR FINAL: ", "yellow", attrs=["bold"]))
        print(colored("Embarca√ß√µes do üßë Player: {}.Embarca√ß√µes do ü§ñ Computador {}.".format(embarcacoes_player1, embarcacoes_computador), "cyan", attrs=["bold"]))
        
    elif embarcacoes_player1 == 0 and embarcacoes_computador == 0:
        print(colored("\nESSA GUERRA FOI SANGRENTA, NINGU√âM SOBREVIVEU!", "grey", attrs=["bold"]))
    
    print(colored("************************************************************************", "green", attrs=["bold"]))
    print(colored("* Obrigado por participar do nosso jogo üòÅ                             *", "green", attrs=["bold"]))
    print(colored("* Alunos: Felipe Bresciani, Pedro Henrique Junqueira e Rafael Eliezer. *", "green", attrs=["bold"]))
    print(colored("************************************************************************\n", "green", attrs=["bold"]))
    
        